from .base_manage_model_conversation import BaseManageModelConversation, ReplyKeyboardRemove


class ManageDepositsConversation(BaseManageModelConversation):

    def __init__(self):
        super().__init__()

        self.verbose_model_name = '—Å—á—ë—Ç'
        self.model_name = 'deposit'
        self.model_fields_list = [
            'balance',
            'symbol',
            'name',
            'emoji'
        ]

    @staticmethod
    def balance(update, context):
        update.message.reply_text(
            f'<b>üí¥ –í–≤–µ–¥–∏—Ç–µ –±–∞–ª–∞–Ω—Å –±—É–¥—É—â–µ–≥–æ —Å—á—ë—Ç–∞</b>',
            parse_mode='HTML',
            reply_markup=ReplyKeyboardRemove()
        )

        return 'symbol'

    @staticmethod
    def symbol(update, context):
        context.user_data['manage_new_item_balance'] = update.message.text

        update.message.reply_text(
            f'<b>üí≤ –í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã –±—É–¥—É—â–µ–≥–æ —Å—á—ë—Ç–∞</b>',
            parse_mode='HTML',
        )

        return 'name'

    @staticmethod
    def name(update, context):
        context.user_data['manage_new_item_symbol'] = update.message.text

        update.message.reply_text(
            f'<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ —Å—á—ë—Ç–∞</b>',
            parse_mode='HTML',
        )

        return 'emoji'

    @staticmethod
    def emoji(update, context):
        context.user_data['manage_new_item_name'] = update.message.text

        update.message.reply_text(
            f'<b>üôÇ –í–≤–µ–¥–∏—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Å—á—ë—Ç–∞</b>',
            parse_mode='HTML',
        )

        return 'add_item'
